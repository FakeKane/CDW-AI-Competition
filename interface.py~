"""
interface.py: sets up the board and helps players interact.
"""
from board import Board
from game import Game
from box import Box
from player_one import Player_One
from player_two import Player_Two

import pygame
from pygame.locals import *


SCREEN_WIDTH = 600
SCREEN_HEIGHT = 600
size = SCREEN_WIDTH, SCREEN_HEIGHT
screen = pygame.display.set_mode(size)
GRID_SIZE = 5  # side length in terms of lines, not dots

background = pygame.image.load("Graphics/background.png")
dot_red = pygame.image.load("Graphics/dot_red.png")
dot_blue = pygame.image.load("Graphics/dot_blue.png")
horizontal_red = pygame.image.load("Graphics/horizontal_red.png")
vertical_red = pygame.image.load("Graphics/vertical_red.png")
horizontal_blue = pygame.image.load("Graphics/horizontal_blue.png")
vertical_blue = pygame.image.load("Graphics/vertical_blue.png")


def setup():  # creates the game
    grid = [[Box(0, 0, 0, 0) for i in range(GRID_SIZE)] for j in range(GRID_SIZE)]
    boards = []
    boards.append(Board(grid))
    return Game(boards)


def display_game(game):
    for i in range(len(game.boards[0])):
        for j in range(len(game.boards[0])):
            

def main():
    game = setup()
    p1 = Player_One(0)
    p2 = Player_Two(0)

    curturn = 1  # whoever's turn it is
    num_filled = 0
    while (not game.finished()):
        screen.blit(background, (0, 0))
        if curturn == 1:
            p1.move(game)
        else:
            assert curturn == 2, "It is not either of their turn??!"
            p2.move(game)
        if num_filled != game.fill_count():  # if a square was filled in
            num_filled = game.fill_count()
            if curturn == 1:
                p1.score += 1
            else:
                p2.score += 1
        else:
            curturn = curturn % 2 + 1  # if a square wasn't filled, it's now the next person's turn
        
        display_game(game)
